package com.oic.bookreminder.models.tables;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import com.oic.bookreminder.models.tables.User;
import com.oic.bookreminder.models.tables.Notification;
import com.oic.bookreminder.models.tables.book;
import com.oic.bookreminder.models.tables.note;
import com.oic.bookreminder.models.tables.read;

import com.oic.bookreminder.models.tables.UserDao;
import com.oic.bookreminder.models.tables.NotificationDao;
import com.oic.bookreminder.models.tables.bookDao;
import com.oic.bookreminder.models.tables.noteDao;
import com.oic.bookreminder.models.tables.readDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig userDaoConfig;
    private final DaoConfig notificationDaoConfig;
    private final DaoConfig bookDaoConfig;
    private final DaoConfig noteDaoConfig;
    private final DaoConfig readDaoConfig;

    private final UserDao userDao;
    private final NotificationDao notificationDao;
    private final bookDao bookDao;
    private final noteDao noteDao;
    private final readDao readDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        userDaoConfig = daoConfigMap.get(UserDao.class).clone();
        userDaoConfig.initIdentityScope(type);

        notificationDaoConfig = daoConfigMap.get(NotificationDao.class).clone();
        notificationDaoConfig.initIdentityScope(type);

        bookDaoConfig = daoConfigMap.get(bookDao.class).clone();
        bookDaoConfig.initIdentityScope(type);

        noteDaoConfig = daoConfigMap.get(noteDao.class).clone();
        noteDaoConfig.initIdentityScope(type);

        readDaoConfig = daoConfigMap.get(readDao.class).clone();
        readDaoConfig.initIdentityScope(type);

        userDao = new UserDao(userDaoConfig, this);
        notificationDao = new NotificationDao(notificationDaoConfig, this);
        bookDao = new bookDao(bookDaoConfig, this);
        noteDao = new noteDao(noteDaoConfig, this);
        readDao = new readDao(readDaoConfig, this);

        registerDao(User.class, userDao);
        registerDao(Notification.class, notificationDao);
        registerDao(book.class, bookDao);
        registerDao(note.class, noteDao);
        registerDao(read.class, readDao);
    }
    
    public void clear() {
        userDaoConfig.getIdentityScope().clear();
        notificationDaoConfig.getIdentityScope().clear();
        bookDaoConfig.getIdentityScope().clear();
        noteDaoConfig.getIdentityScope().clear();
        readDaoConfig.getIdentityScope().clear();
    }

    public UserDao getUserDao() {
        return userDao;
    }

    public NotificationDao getNotificationDao() {
        return notificationDao;
    }

    public bookDao getBookDao() {
        return bookDao;
    }

    public noteDao getNoteDao() {
        return noteDao;
    }

    public readDao getReadDao() {
        return readDao;
    }

}

package com.oic.bookreminder.models.tables;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import com.oic.bookreminder.models.tables.User;
import com.oic.bookreminder.models.tables.Notification;
import com.oic.bookreminder.models.tables.Book;
import com.oic.bookreminder.models.tables.Note;
import com.oic.bookreminder.models.tables.Read;

import com.oic.bookreminder.models.tables.UserDao;
import com.oic.bookreminder.models.tables.NotificationDao;
import com.oic.bookreminder.models.tables.BookDao;
import com.oic.bookreminder.models.tables.NoteDao;
import com.oic.bookreminder.models.tables.ReadDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig userDaoConfig;
    private final DaoConfig notificationDaoConfig;
    private final DaoConfig bookDaoConfig;
    private final DaoConfig noteDaoConfig;
    private final DaoConfig readDaoConfig;

    private final UserDao userDao;
    private final NotificationDao notificationDao;
    private final BookDao bookDao;
    private final NoteDao noteDao;
    private final ReadDao readDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        userDaoConfig = daoConfigMap.get(UserDao.class).clone();
        userDaoConfig.initIdentityScope(type);

        notificationDaoConfig = daoConfigMap.get(NotificationDao.class).clone();
        notificationDaoConfig.initIdentityScope(type);

        bookDaoConfig = daoConfigMap.get(BookDao.class).clone();
        bookDaoConfig.initIdentityScope(type);

        noteDaoConfig = daoConfigMap.get(NoteDao.class).clone();
        noteDaoConfig.initIdentityScope(type);

        readDaoConfig = daoConfigMap.get(ReadDao.class).clone();
        readDaoConfig.initIdentityScope(type);

        userDao = new UserDao(userDaoConfig, this);
        notificationDao = new NotificationDao(notificationDaoConfig, this);
        bookDao = new BookDao(bookDaoConfig, this);
        noteDao = new NoteDao(noteDaoConfig, this);
        readDao = new ReadDao(readDaoConfig, this);

        registerDao(User.class, userDao);
        registerDao(Notification.class, notificationDao);
        registerDao(Book.class, bookDao);
        registerDao(Note.class, noteDao);
        registerDao(Read.class, readDao);
    }
    
    public void clear() {
        userDaoConfig.getIdentityScope().clear();
        notificationDaoConfig.getIdentityScope().clear();
        bookDaoConfig.getIdentityScope().clear();
        noteDaoConfig.getIdentityScope().clear();
        readDaoConfig.getIdentityScope().clear();
    }

    public UserDao getUserDao() {
        return userDao;
    }

    public NotificationDao getNotificationDao() {
        return notificationDao;
    }

    public BookDao getBookDao() {
        return bookDao;
    }

    public NoteDao getNoteDao() {
        return noteDao;
    }

    public ReadDao getReadDao() {
        return readDao;
    }

}
